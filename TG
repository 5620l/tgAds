#!/bin/bash

THIS_DIR=$(cd $(dirname $0); pwd)
cd $THIS_DIR

logo() {
    declare -A logo
    seconds="0.004"
logo[0]="  .          '||    ||' '||'''|  '||    ||' '||'|.  '||'''|  '||''|."
logo[1]=".||.   ... .  |||  |||   || .     |||  |||   ||  ||  || .     ||   ||"
logo[2]=" ||   || ||   |'|..'||   ||'|     |'|..'||   ||''|.  ||'|     ||''|'"
logo[3]=" ||    |''    | '|' ||   ||       | '|' ||   ||   || ||       ||   |."
logo[4]=" '|.' '|||.  .|. | .||. .||....| .|. | .||. .||..|' .||....| .||.  '|'"
logo[5]="    .|...'"
logo[6]="➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
logo[7]="Channel : @tgMember"
logo[8]="Develop by @sajjad_021"
printf "\e[38;5;213m\t"
    for i in ${!logo[@]}; do
        for x in `seq 0 ${#logo[$i]}`; do
            printf "${logo[$i]:$x:1}"
            sleep $seconds
        done
        printf "\n\t"
    done
printf "\n"
}

log() {
  echo -e "\033[38;5;105m .               /|\,/ |\,  ,- _~,   /\|,/ \|,   - _,,     ,- _~,  -_ /\,\033[0;00m"
  echo -e "\033[38;5;142m||    _          /| || ||   (' /| /  /| || ||     -/  )   (' /| /   || ,,\033[0;00m"
  echo -e "\033[38;5;099m=||=  / \\        || || ||  ((  ||/=  || || ||    ~||_<   ((  || =  /|| /|.\033[0;00m"
  echo -e "\033[38;5;034m||  || ||        ||=|= ||  ((  ||    ||=|= ||     || |\  (( |||    \||/-\,\033[0;00m"
  echo -e "\033[38;5;406m||  || ||       ~|| || ||   ( / |   ~|| || ||     ,/--||  (   |     ||  \.,\033[0;00m"
  echo -e "\033[38;5;129m||  \|_-|        |, |\,|\,   -____-  |, |\,|\,   _--_-'    -____- _---_-|.\033[0;00m"
         echo -e "\033[38;5;129m||   -_-_\033[0;00m"
            echo -e "\033[38;5;129m,_-_-\.\033[0;00m"
 }
 
install_luarocks() {
 echo -e "\e[38;5;142mInstalling LuaRocks\e"
  git clone https://github.com/keplerproject/luarocks.git
  cd luarocks
  git checkout tags/v2.4.2 # Current stable
  PREFIX="$THIS_DIR/.luarocks"
  ./configure --prefix=$PREFIX --sysconfdir=$PREFIX/luarocks --force-config
   make build && make install
cd ..
  rm -rf luarocks
}

install_rocks() {
  rocks="luasocket luasec redis-lua lua-term dkjson lanes xml fakeredis luaexpat luasec lbase64 luafilesystem lub ansicolors lua-cjson feedparser serpent"
    for rock in $rocks; do
      ./.luarocks/bin/luarocks install $rock
    done
}
  
tg() {
echo -e "\e[38;5;099minstall telegram-cli\e"
  git clone --recursive https://github.com/sajjad-021/tg.git
  git pull
	git submodule update --init --recursive
	patch -i "disable-python-and-libjansson.patch" -p 0 --batch --forward
	RET=$?;
	mv tg .tg
	cd .tg
  patch -i "../disable-python-and-libjansson.patch" -p 0 --batch --forward
	RET=$?;
	if [ $RET -ne 0 ]; then
		autoconf -i
	fi
  ./configure && make
	cd ..
}

install2() {
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install -y gcc-4.9 g++-4.9
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4
sudo apt-get install libstdc++6
sudo add-apt-repository ppa:ubuntu-toolchain-r/test 
    sudo apt-get install screen -y
    sudo apt-get install tmux -y
		sudo apt-get install redis-server -y
		sudo apt-get install libreadline-dev libconfig-dev libssl-dev libraries libraries-dev lua5.2 liblua5.2-dev libevent-dev libjansson* libpython-dev make autoconf unzip git redis-server g++ -y ?force-yes
}

install() {
chmod 777 TG
echo -e "\e[38;5;035mUpdating packages\e"
  sudo apt update -y
	sudo apt upgrade -y
echo -e "\\e[38;5;129mInstalling dependencies\e"
install2
install_luarocks
install_rocks
tg
sudo apt -y update
sudo apt -y upgrade
sudo apt-get -y dist-upgrade
sudo apt -y autoremove
sudo apt autoclean
sudo service redis-server restart
	echo -e "you can launch bot with \033[38;5;208m ./TG 1 , ./TG 2 , ....\033[1;208m"
   read -p "Do you want to install and config? [y/n] = "
	if [ "$REPLY" == "y" ] || [ "$REPLY" == "Y" ]; then
       while true ; do
         ./TG 1
       sleep 10
      done
    elif [ "$REPLY" == "n" ] || [ "$REPLY" == "N" ]; then
      menu
		fi
}

inf() {
memTotal_b=`free -b |grep Mem |awk '{print $2}'`
memFree_b=`free -b |grep Mem |awk '{print $4}'`
memBuffer_b=`free -b |grep Mem |awk '{print $6}'`
memCache_b=`free -b |grep Mem |awk '{print $7}'`

memTotal_m=`free -m |grep Mem |awk '{print $2}'`
memFree_m=`free -m |grep Mem |awk '{print $4}'`
memBuffer_m=`free -m |grep Mem |awk '{print $6}'`
memCache_m=`free -m |grep Mem |awk '{print $7}'`
CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
uptime=`uptime`
ProcessCnt=`ps -A | wc -l`
memUsed_b=$(($memTotal_b-$memFree_b-$memBuffer_b-$memCache_b))
memUsed_m=$(($memTotal_m-$memFree_m-$memBuffer_m-$memCache_m))
memUsedPrc=$((($memUsed_b*100)/$memTotal_b))
echo -e "➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\033[38;5;208mServer Information\033[0;00m➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
echo ">Total Ram : $memTotal_m MB  Ram in use : $memUsed_m MB - $memUsedPrc% used!"
echo '>Cpu in use : '"$CPUPer"'%'
echo '>Server Uptime : '"$uptime"
}

cr() {
  mkdir -p "$THIS_DIR"/.telegram-cli/AdsBot"$1"
	cfg="$THIS_DIR"/.telegram-cli/AdsBot$1/AdsBot.cfg
	TG="$THIS_DIR"/TG-$1.lua
	if [[ ! -f $cfg ]]; then
		echo "default_profile = \"AdsBot$1\";AdsBot$1 = {config_directory = \"$THIS_DIR/.telegram-cli/AdsBot$1\";test = false;msg_num = true;};" >> $cfg
	fi
	if [[ ! -f $TG ]]; then
		cat TG.lua >> TG-$1.lua
		sed -i 's/Ads-ID/'$1'/g' TG-$1.lua
	fi
}

anticrash() {
COUNTER=0
  while [ $COUNTER -lt 5 ]; do
		for tgAdvertising in TG-*.lua ; do
			AdsBot="${tgAdvertising%.*}"
			num="${AdsBot/TG-/}"
			tmux kill-session -t AdsBot-"$num"
			for files in "$THIS_DIR"/.telegram-cli/AdsBot"$num"/downloads ; do
				rm -rf $files/*
			done
			TMUX= tmux new-session -d -s AdsBot-"$num" "bash TG $num"
			tmux detach -s AdsBot-"$num"
		done
    sleep 1
  done
}

menu() {
echo -e "➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\033[38;5;208mMENU\033[0;00m➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖"
echo -e "1 => \033[38;5;208mInstall\033[0;00m"
echo -e "2 => \033[38;5;208mUpdate\033[0;00m"
echo -e "3 => \033[38;5;208manticrash\033[0;00m"
echo -e "4 => \033[38;5;208mTrun Off Robot's\033[0;00m"
echo -e "5 => \033[38;5;208mServer informathion\033[0;00m"
echo -e "0 => \033[38;5;208mExit Menu\033[0;00m"
echo -e "\033[38;5;208m  ➖  ➖  ➖➖➖➖➖➖  ➖  ➖  ➖  \033[0;00m"
echo '>Channel : '"@tgMember"
echo '>Develop by '"@sajjad_021"
# Options in ./TG <option>
read VAR
if [ "$VAR" = 1 ]; then
  clear
	logo
  install
  menu
elif [ "$VAR" = 2 ]; then
  update
	log
	menu
elif [ "$VAR" = 3 ]; then
	anticrash
	  echo All tgAdvertising is Running!
	exit
	log
	menu
elif [ "$VAR" = 4 ]; then
	killall screen
	killall tmux
	killall screen
	killall tmux
	killall telegram-cli
	sudo service redis-server restart
	log
	echo -e '\e[34mSessions closed\e[0m'
	menu
elif [ "$VAR" = 5 ]; then
	inf
	menu
elif [ "$VAR" = 0 ]; then
	clear
	log
	exit
elif [ "$VAR" = "" ]; then
	clear
	echo -e '\e[31mOpcion invalida\e[0m'
	else
	clear
	echo -e '\e[31mOpcion invalida\e[0m'
fi
}

if [ "$1" ]; then
	if [ "$1" = "install" ]; then
		install
	elif [ "$1" = "update" ]; then
		update
	elif 
		[ "$1" = "tmux" ]; then
	  log
    anticrash
	elif 
		[ "$1" = "info" ]; then
    clear
	  log
	  inf
else
  log
	if [[ "$1" =~ ^[0-9]+$ ]] ; then
			if [ ! -f ./.tg/telegram.h ]; then
				echo "tg not found"
				echo "Run $0 install"
				exit 1
			fi
			if [ ! -f ./.tg/bin/telegram-cli ]; then
				echo "tg binary not found"
				echo "Run $0 install"
				exit 1
			fi
			cr $1
                         while true; do
			    rm -r /.telegram-cli/AdsBot$1/state
			     ./.tg/bin/telegram-cli -k ./.tg/tg-server.pub -s ./TG-$1.lua -E -c ./.telegram-cli/AdsBot$1/AdsBot.cfg "$@"
			done
		else
			menu
		fi
	fi
else
  log
	menu
fi
